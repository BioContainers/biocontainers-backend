openapi: 3.0.0
info:
  title: GA4GH Tool Discovery API
  description: Proposed API for GA4GH (Global Alliance for Genomics & Health) tool
    repositories. A tool consists of a set of container images that are paired with
    a set of documents. Examples of documents include CWL (Common Workflow Language),
    WDL (Workflow Description Language), NFL (Nextflow), or GXFORMAT2 (Galaxy) that
    describe how to use those images and a set of specifications for those images
    (examples are Dockerfiles or Singularity recipes) that describe how to reproduce
    those images in the future. We use the following terminology, a "container image"
    describes a container as stored at rest on a filesystem, a "tool" describes one
    of the triples as described above. In practice, examples of "tools" include CWL
    CommandLineTools, CWL Workflows, WDL workflows, and Nextflow workflows that reference
    containers in formats such as Docker or Singularity.
  version: 2.0.1
externalDocs:
  description: Description of GA4GH Tool Registry (Exchange) Schema
  url: https://github.com/ga4gh/tool-registry-schemas
servers:
- url: /ga4gh/trs/v2
tags:
- name: GA4GH
  description: A group of web resources proposed as a common standard for tool repositories
  externalDocs:
    url: https://ga4gh.github.io/tool-registry-service-schemas/Introduction/
paths:
  /service-info:
    get:
      tags:
      - service-info
      summary: Show information about this service. It is assumed that removing this
        endpoint from a URL will result in a valid URL to query against
      operationId: get_service_info
      responses:
        "200":
          description: A successful operation to request the service information about
            this running service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
      x-openapi-router-controller: biocontainers_flask.server.controllers.service_info_controller
  /tools/{id}:
    get:
      tags:
      - GA4GH
      summary: List one specific tool, acts as an anchor for self references
      description: This endpoint returns one specific tool (which has ToolVersions
        nested inside it).
      operationId: tools_id_get
      parameters:
      - name: id
        in: path
        description: A unique identifier of the tool, scoped to this registry, for
          example `123456`.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A tool.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tool'
            text/plain:
              schema:
                $ref: '#/components/schemas/Tool'
        "404":
          description: The tool can not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: biocontainers_flask.server.controllers.ga4_gh_controller
  /tools/{id}/versions:
    get:
      tags:
      - GA4GH
      summary: List versions of a tool
      description: Returns all versions of the specified tool.
      operationId: tools_id_versions_get
      parameters:
      - name: id
        in: path
        description: A unique identifier of the tool, scoped to this registry, for
          example `123456`.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: An array of tool versions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToolVersion'
                x-content-type: application/json
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToolVersion'
      x-openapi-router-controller: biocontainers_flask.server.controllers.ga4_gh_controller
  /tools/{id}/versions/{version_id}:
    get:
      tags:
      - GA4GH
      summary: List one specific tool version, acts as an anchor for self references
      description: This endpoint returns one specific tool version.
      operationId: tools_id_versions_version_id_get
      parameters:
      - name: id
        in: path
        description: A unique identifier of the tool, scoped to this registry, for
          example `123456`.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version_id
        in: path
        description: An identifier of the tool version, scoped to this registry, for
          example `v1`. We recommend that versions use semantic versioning https://semver.org/spec/v2.0.0.html  (For
          example, `1.0.0` instead of `develop`)
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A tool version.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolVersion'
            text/plain:
              schema:
                $ref: '#/components/schemas/ToolVersion'
        "404":
          description: The tool can not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: biocontainers_flask.server.controllers.ga4_gh_controller
  /tools:
    get:
      tags:
      - GA4GH
      summary: List all tools
      description: |
        This endpoint returns all tools available or a filtered subset using metadata query parameters.
      operationId: tools_get
      parameters:
      - name: id
        in: query
        description: A unique identifier of the tool, scoped to this registry, for
          example `123456`.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: alias
        in: query
        description: |-
          Support for this parameter is optional for tool registries that support aliases.
          If provided will only return entries with the given alias.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: toolClass
        in: query
        description: Filter tools by the name of the subclass (#/definitions/ToolClass)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: registry
        in: query
        description: The image registry that contains the image.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: organization
        in: query
        description: The organization in the registry that published the image.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: The name of the image.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: toolname
        in: query
        description: The name of the tool.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: description
        in: query
        description: The description of the tool.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: author
        in: query
        description: The author of the tool (TODO a thought occurs, are we assuming
          that the author of the CWL and the image are the same?).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: checker
        in: query
        description: Return only checker workflows.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: offset
        in: query
        description: Start index of paging. Pagination results can be based on numbers
          or other values chosen by the registry implementor (for example, SHA values).
          If this exceeds the current result set return an empty set.  If not specified
          in the request, this will start at the beginning of the results.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: Amount of records to return in a given page.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1000
      - name: all_fields_search
        in: query
        description: String to search all fields
        required: false
        schema:
          type: string
      - name: sort_field
        in: query
        description: Field to sortby
        required: false
        schema:
          type: string
          default: id
      - name: sort_order
        in: query
        description: asc or desc
        required: false
        schema:
          type: "string"
          default: "asc"
      responses:
        "200":
          description: An array of Tools that match the filter.
          headers:
            next_page:
              description: A URL that can be used to reach the next page based on
                the current offset and page record limit.
              style: simple
              explode: false
              schema:
                type: string
            last_page:
              description: A URL that can be used to reach the last page based on
                the current page record limit.
              style: simple
              explode: false
              schema:
                type: string
            self_link:
              description: A URL that can be used to return to the current page later.
              style: simple
              explode: false
              schema:
                type: string
            current_offset:
              description: The current start index of the paging used for this result.
              style: simple
              explode: false
              schema:
                type: string
            current_limit:
              description: The current page record limit used for this result.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tool'
                x-content-type: application/json
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tool'
      x-openapi-router-controller: biocontainers_flask.server.controllers.ga4_gh_controller
  /facets:
    get:
      tags:
      - GA4GH
      summary: Facets all the properties from tools
      description: |
        This endpoint returns all facets properties available or a filtered subset using  metadata query parameters.
      operationId: facets_get
      parameters:
      - name: id
        in: query
        description: A unique identifier of the tool, scoped to this registry, for
          example `123456`.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: alias
        in: query
        description: |-
          Support for this parameter is optional for tool registries that support aliases.
          If provided will only return entries with the given alias.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: toolClass
        in: query
        description: Filter tools by the name of the subclass (#/definitions/ToolClass)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: registry
        in: query
        description: The image registry that contains the image.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: organization
        in: query
        description: The organization in the registry that published the image.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: The name of the image.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: toolname
        in: query
        description: The name of the tool.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: description
        in: query
        description: The description of the tool.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: author
        in: query
        description: The author of the tool (TODO a thought occurs, are we assuming
          that the author of the CWL and the image are the same?).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: checker
        in: query
        description: Return only checker workflows.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: all_fields_search
        in: query
        description: String to search all fields
        required: false
        schema:
          type: string
      responses:
        "200":
          description: An array of Facets that match the filter.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Facet'
                x-content-type: application/json
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Facet'
      x-openapi-router-controller: biocontainers_flask.server.controllers.ga4_gh_controller
  /tools/{id}/versions/{version_id}/{type}/descriptor:
    get:
      tags:
      - GA4GH
      summary: Get the tool descriptor for the specified tool
      description: Returns the descriptor for the specified tool (examples include
        CWL, WDL, Nextflow, or Galaxy documents).
      operationId: tools_id_versions_version_id_type_descriptor_get
      parameters:
      - name: type
        in: path
        description: The output type of the descriptor. Plain types return the bare
          descriptor while the "non-plain" types return a descriptor wrapped with
          metadata. Allowable values include "CWL", "WDL", "NFL", "GALAXY", "PLAIN_CWL",
          "PLAIN_WDL", "PLAIN_NFL", "PLAIN_GALAXY".
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: A unique identifier of the tool, scoped to this registry, for
          example `123456`.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version_id
        in: path
        description: An identifier of the tool version, scoped to this registry, for
          example `v1`.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The tool descriptor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileWrapper'
            text/plain:
              schema:
                $ref: '#/components/schemas/FileWrapper'
        "404":
          description: The tool descriptor can not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: biocontainers_flask.server.controllers.ga4_gh_controller
  /tools/{id}/versions/{version_id}/{type}/descriptor/{relative_path}:
    get:
      tags:
      - GA4GH
      summary: Get additional tool descriptor files relative to the main file
      description: Descriptors can often include imports that refer to additional
        descriptors. This returns additional descriptors for the specified tool in
        the same or other directories that can be reached as a relative path. This
        endpoint can be useful for workflow engine implementations like cwltool to
        programmatically download all the descriptors for a tool and run it. This
        can optionally include other files described with FileWrappers such as test
        parameters and containerfiles.
      operationId: tools_id_versions_version_id_type_descriptor_relative_path_get
      parameters:
      - name: type
        in: path
        description: The output type of the descriptor. If not specified, it is up
          to the underlying implementation to determine which output type to return.
          Plain types return the bare descriptor while the "non-plain" types return
          a descriptor wrapped with metadata. Allowable values are "CWL", "WDL", "NFL",
          "GALAXY", "PLAIN_CWL", "PLAIN_WDL", "PLAIN_NFL", "PLAIN_GALAXY".
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: A unique identifier of the tool, scoped to this registry, for
          example `123456`.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version_id
        in: path
        description: An identifier of the tool version for this particular tool registry,
          for example `v1`.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: relative_path
        in: path
        description: A relative path to the additional file (same directory or subdirectories),
          for example 'foo.cwl' would return a 'foo.cwl' from the same directory as
          the main descriptor. 'nestedDirectory/foo.cwl' would return the file  from
          a nested subdirectory.  Unencoded paths such 'sampleDirectory/foo.cwl' should
          also be allowed.
        required: true
        style: simple
        explode: false
        schema:
          pattern: .+
          type: string
      responses:
        "200":
          description: The tool descriptor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileWrapper'
            text/plain:
              schema:
                $ref: '#/components/schemas/FileWrapper'
        "404":
          description: The tool can not be output in the specified type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: biocontainers_flask.server.controllers.ga4_gh_controller
  /tools/{id}/versions/{version_id}/{type}/tests:
    get:
      tags:
      - GA4GH
      summary: Get a list of test JSONs
      description: Get a list of test JSONs (these allow you to execute the tool successfully)
        suitable for use with this descriptor type.
      operationId: tools_id_versions_version_id_type_tests_get
      parameters:
      - name: type
        in: path
        description: The type of the underlying descriptor. Allowable values include
          "CWL", "WDL", "NFL", "GALAXY", "PLAIN_CWL", "PLAIN_WDL", "PLAIN_NFL", "PLAIN_GALAXY".
          For example, "CWL" would return an list of ToolTests objects while "PLAIN_CWL"
          would return a bare JSON list with the content of the tests.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: A unique identifier of the tool, scoped to this registry, for
          example `123456`.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version_id
        in: path
        description: An identifier of the tool version for this particular tool registry,
          for example `v1`.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The tool test JSON response.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileWrapper'
                x-content-type: application/json
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileWrapper'
        "404":
          description: The tool can not be output in the specified type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: biocontainers_flask.server.controllers.ga4_gh_controller
  /tools/{id}/versions/{version_id}/{type}/files:
    get:
      tags:
      - GA4GH
      summary: Get a list of objects that contain the relative path and file type
      description: Get a list of objects that contain the relative path and file type.
        The descriptors are intended for use with the /tools/{id}/versions/{version_id}/{type}/descriptor/{relative_path}
        endpoint. Returns a zip file of all files when format=zip is specified.
      operationId: tools_id_versions_version_id_type_files_get
      parameters:
      - name: type
        in: path
        description: The output type of the descriptor. Examples of allowable values
          are "CWL", "WDL", "NFL", "GALAXY".
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: A unique identifier of the tool, scoped to this registry, for
          example `123456`.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version_id
        in: path
        description: An identifier of the tool version for this particular tool registry,
          for example `v1`.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: format
        in: query
        description: Returns a zip file of all files when format=zip is specified.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - zip
      responses:
        "200":
          description: The array of File JSON responses.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToolFile'
                x-content-type: application/json
            application/zip:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToolFile'
        "404":
          description: The tool can not be output in the specified type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/zip:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: biocontainers_flask.server.controllers.ga4_gh_controller
  /tools/{id}/versions/{version_id}/containerfile:
    get:
      tags:
      - GA4GH
      summary: Get the container specification(s) for the specified image.
      description: Returns the container specifications(s) for the specified image.
        For example, a CWL CommandlineTool can be associated with one specification
        for a container, a CWL Workflow can be associated with multiple specifications
        for containers.
      operationId: tools_id_versions_version_id_containerfile_get
      parameters:
      - name: id
        in: path
        description: A unique identifier of the tool, scoped to this registry, for
          example `123456`.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version_id
        in: path
        description: An identifier of the tool version for this particular tool registry,
          for example `v1`.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The tool payload.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileWrapper'
                x-content-type: application/json
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileWrapper'
        "404":
          description: There are no container specifications for this tool.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: biocontainers_flask.server.controllers.ga4_gh_controller
  /toolClasses:
    get:
      tags:
      - GA4GH
      summary: List all tool types
      description: This endpoint returns all tool-classes available.
      operationId: tool_classes_get
      responses:
        "200":
          description: A list of potential tool classes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToolClass'
                x-content-type: application/json
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToolClass'
      x-openapi-router-controller: biocontainers_flask.server.controllers.ga4_gh_controller
  /tools/{id}/similars:
    get:
      tags:
        - GA4GH
      summary: List all similar tools
      description: This endpoint returns all tools available similar to the tool id
      operationId: tools_get_similars
      parameters:
      - name: id
        in: path
        description: A unique identifier of the tool, scoped to this registry
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A list of potential tool classes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tool'
                x-content-type: application/json
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tool'
      x-openapi-router-controller: biocontainers_flask.server.controllers.ga4_gh_controller
  /stats:
    get:
      tags:
        - stats
      summary: "Return some metadata that is useful for describing this registry"
      description: "Return some metadata that is useful for describing this registry"
      operationId: "stats"
      parameters: []
      responses:
        "200":
          description: A list of potential tool classes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stat'
                x-content-type: application/json
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stat'
      x-openapi-router-controller: biocontainers_flask.server.controllers.ga4_gh_controller
components:
  schemas:
    Stat:
      type: "object"
      required:
        - "name"
        - "value"
      properties:
        name:
          type: string
          description: "name of the stats"
        value:
          type: string
          description: "Value of the stats"
      description: "Provides a set of stats abotu the containers"
      example:
        name: "tool_counts"
        value: "20"
    Checksum:
      required:
      - checksum
      - type
      type: object
      properties:
        checksum:
          type: string
          description: 'The hex-string encoded checksum for the data. '
        type:
          type: string
          description: |-
            The digest method used to create the checksum.
            The value (e.g. `sha-256`) SHOULD be listed as `Hash Name String` in the https://github.com/ga4gh-discovery/ga4gh-checksum/blob/master/hash-alg.csv[GA4GH Checksum Hash Algorithm Registry].
            Other values MAY be used, as long as implementors are aware of the issues discussed in https://tools.ietf.org/html/rfc6920#section-9.4[RFC6920].
            GA4GH may provide more explicit guidance for use of non-IANA-registered algorithms in the future.
    ToolFile:
      type: object
      properties:
        path:
          type: string
          description: Relative path of the file.  A descriptor's path can be used
            with the GA4GH .../{type}/descriptor/{relative_path} endpoint.
        file_type:
          type: string
          enum:
          - TEST_FILE
          - PRIMARY_DESCRIPTOR
          - SECONDARY_DESCRIPTOR
          - CONTAINERFILE
          - OTHER
      example:
        path: path
        file_type: TEST_FILE
    ToolClass:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the class.
        name:
          type: string
          description: A short friendly name for the class.
        description:
          type: string
          description: A longer explanation of what this class is and what it can
            accomplish.
      description: Describes a class (type) of tool allowing us to categorize workflows,
        tasks, and maybe even other entities (such as services) separately.
      example:
        name: name
        description: description
        id: id
    Tool:
      required:
      - id
      - organization
      - toolclass
      - url
      - versions
      type: object
      properties:
        url:
          type: string
          description: The URL for this tool in this registry.
          example: http://agora.broadinstitute.org/tools/123456
        id:
          type: string
          description: A unique identifier of the tool, scoped to this registry.
          example: "123456"
        aliases:
          type: array
          description: "Support for this parameter is optional for tool registries\
            \ that support aliases.\nA list of strings that can be used to identify\
            \ this tool which could be  straight up URLs. \nThis can be used to expose\
            \ alternative ids (such as GUIDs) for a tool\nfor registries. Can be used\
            \ to match tools across registries."
          items:
            type: string
            example: '["630d31c3-381e-488d-b639-ce5d047a0142","dockstore.org:630d31c3-381e-488d-b639-ce5d047a0142","bio.tools:630d31c3-381e-488d-b639-ce5d047a0142"]'
        organization:
          type: string
          description: The organization that published the image.
        name:
          type: string
          description: The name of the tool.
        toolclass:
          $ref: '#/components/schemas/ToolClass'
        description:
          type: string
          description: The description of the tool.
        meta_version:
          type: string
          description: The version of this tool in the registry. Iterates when fields
            like the description, author, etc. are updated.
        has_checker:
          type: boolean
          description: Whether this tool has a checker tool associated with it.
        checker_url:
          type: string
          description: Optional url to the checker tool that will exit successfully
            if this tool produced the expected result given test data.
        idnetifiers:
          type: array
          description: "List of identifiers associated with the tool in the way key:value"
        versions:
          type: array
          description: A list of versions for this tool.
          items:
            $ref: '#/components/schemas/ToolVersion'
      description: A tool (or described tool) is defined as a tuple of a descriptor
        file (which potentially consists of multiple files), a set of container images,
        and a set of instructions for creating those images.
      example:
        aliases:
        - '["630d31c3-381e-488d-b639-ce5d047a0142","dockstore.org:630d31c3-381e-488d-b639-ce5d047a0142","bio.tools:630d31c3-381e-488d-b639-ce5d047a0142"]'
        - '["630d31c3-381e-488d-b639-ce5d047a0142","dockstore.org:630d31c3-381e-488d-b639-ce5d047a0142","bio.tools:630d31c3-381e-488d-b639-ce5d047a0142"]'
        versions:
        - images:
          - image_name: '["quay.io/seqware/seqware_full/1.1","ubuntu:latest"]'
            size: 0
            checksum:
            - checksum: 77af4d6b9913e693e8d0b4b294fa62ade6054e6b2f1ffb617ac955dd63fb0182
              type: sha256
            updated: updated
            registry_host: '["registry.hub.docker.com"]'
            image_type: Docker
          - image_name: '["quay.io/seqware/seqware_full/1.1","ubuntu:latest"]'
            size: 0
            checksum:
            - checksum: 77af4d6b9913e693e8d0b4b294fa62ade6054e6b2f1ffb617ac955dd63fb0182
              type: sha256
            updated: updated
            registry_host: '["registry.hub.docker.com"]'
            image_type: Docker
          author:
          - author
          - author
          meta_version: meta_version
          is_production: true
          descriptor_type:
          - CWL
          - CWL
          verified: true
          signed: true
          included_apps:
          - https://bio.tools/tool/mytum.de/SNAP2/1
          - https://bio.tools/bioexcel_seqqc
          url: http://agora.broadinstitute.org/tools/123456/versions/1
          name: name
          containerfile: true
          id: v1
          verified_source:
          - verified_source
          - verified_source
        - images:
          - image_name: '["quay.io/seqware/seqware_full/1.1","ubuntu:latest"]'
            size: 0
            checksum:
            - checksum: 77af4d6b9913e693e8d0b4b294fa62ade6054e6b2f1ffb617ac955dd63fb0182
              type: sha256
            updated: updated
            registry_host: '["registry.hub.docker.com"]'
            image_type: Docker
          - image_name: '["quay.io/seqware/seqware_full/1.1","ubuntu:latest"]'
            size: 0
            checksum:
            - checksum: 77af4d6b9913e693e8d0b4b294fa62ade6054e6b2f1ffb617ac955dd63fb0182
              type: sha256
            updated: updated
            registry_host: '["registry.hub.docker.com"]'
            image_type: Docker
          author:
          - author
          - author
          meta_version: meta_version
          is_production: true
          descriptor_type:
          - CWL
          - CWL
          verified: true
          signed: true
          included_apps:
          - https://bio.tools/tool/mytum.de/SNAP2/1
          - https://bio.tools/bioexcel_seqqc
          url: http://agora.broadinstitute.org/tools/123456/versions/1
          name: name
          containerfile: true
          id: v1
          verified_source:
          - verified_source
          - verified_source
        meta_version: meta_version
        organization: organization
        checker_url: checker_url
        name: name
        has_checker: true
        toolclass:
          name: name
          description: description
          id: id
        description: description
        id: "123456"
        url: http://agora.broadinstitute.org/tools/123456
    FacetValue:
      required:
      - count
      - value
      type: object
      properties:
        value:
          type: string
          description: A value of an specific facet peorperty
          example: MIT
        count:
          type: integer
          description: Number of tools with the specific value
          format: int32
          example: 12
      description: A facet value and the corresponding number of objects containing
        the specific value
      example:
        count: 12
        value: MIT
    Facet:
      required:
      - facet
      - values
      type: object
      properties:
        facet:
          type: string
          description: A facet property for the Tool
          example: license
        values:
          type: array
          items:
            $ref: '#/components/schemas/FacetValue'
      description: A facet values for all the tools in the registry.
      example:
        values:
        - count: 12
          value: MIT
        - count: 12
          value: MIT
        facet: license
    ToolVersion:
      required:
      - id
      - url
      type: object
      properties:
        author:
          type: array
          description: Contact information for the author of this version of the tool
            in the registry. (More complex authorship information is handled by the
            descriptor).
          items:
            type: string
        name:
          type: string
          description: The name of the version.
        url:
          type: string
          description: The URL for this tool version in this registry.
          example: http://agora.broadinstitute.org/tools/123456/versions/1
        id:
          type: string
          description: An identifier of the version of this tool for this particular
            tool registry.
          example: v1
        is_production:
          type: boolean
          description: This version of a tool is guaranteed to not change over time
            (for example, a  tool built from a tag in git as opposed to a branch).
            A production quality tool  is required to have a checksum
        images:
          type: array
          description: All known docker images (and versions/hashes) used by this
            tool. If the tool has to evaluate any of the docker images strings at
            runtime, those ones cannot be reported here.
          items:
            $ref: '#/components/schemas/ImageData'
        descriptor_type:
          type: array
          description: The type (or types) of descriptors available.
          items:
            $ref: '#/components/schemas/DescriptorType'
        containerfile:
          type: boolean
          description: Reports if this tool has a containerfile available. (For Docker-based
            tools, this would indicate the presence of a Dockerfile)
        meta_version:
          type: string
          description: The version of this tool version in the registry. Iterates
            when fields like the description, author, etc. are updated.
        verified:
          type: boolean
          description: Reports whether this tool has been verified by a specific organization
            or individual.
        verified_source:
          type: array
          description: Source of metadata that can support a verified tool, such as
            an email or URL.
          items:
            type: string
        signed:
          type: boolean
          description: Reports whether this version of the tool has been signed.
        included_apps:
          type: array
          description: An array of IDs for the applications that are stored inside
            this tool.
          example:
          - https://bio.tools/tool/mytum.de/SNAP2/1
          - https://bio.tools/bioexcel_seqqc
          items:
            type: string
      description: A tool version describes a particular iteration of a tool as described
        by a reference to a specific image and/or documents.
      example:
        images:
        - image_name: '["quay.io/seqware/seqware_full/1.1","ubuntu:latest"]'
          size: 0
          checksum:
          - checksum: 77af4d6b9913e693e8d0b4b294fa62ade6054e6b2f1ffb617ac955dd63fb0182
            type: sha256
          updated: updated
          registry_host: '["registry.hub.docker.com"]'
          image_type: Docker
        - image_name: '["quay.io/seqware/seqware_full/1.1","ubuntu:latest"]'
          size: 0
          checksum:
          - checksum: 77af4d6b9913e693e8d0b4b294fa62ade6054e6b2f1ffb617ac955dd63fb0182
            type: sha256
          updated: updated
          registry_host: '["registry.hub.docker.com"]'
          image_type: Docker
        author:
        - author
        - author
        meta_version: meta_version
        is_production: true
        descriptor_type:
        - CWL
        - CWL
        verified: true
        signed: true
        included_apps:
        - https://bio.tools/tool/mytum.de/SNAP2/1
        - https://bio.tools/bioexcel_seqqc
        url: http://agora.broadinstitute.org/tools/123456/versions/1
        name: name
        containerfile: true
        id: v1
        verified_source:
        - verified_source
        - verified_source
    ImageData:
      type: object
      properties:
        registry_host:
          type: string
          description: A docker registry or a URL to a Singularity registry. Used
            along with image_name to locate a specific image.
          example: '["registry.hub.docker.com"]'
        image_name:
          type: string
          description: Used in conjunction with a registry_url if provided to locate
            images.
          example: '["quay.io/seqware/seqware_full/1.1","ubuntu:latest"]'
        size:
          type: integer
          description: Size of the container in bytes.
        updated:
          type: string
          description: Last time the container was updated.
        checksum:
          type: array
          description: A production (immutable) tool version is required to have a
            hashcode. Not required otherwise, but might be useful to detect changes.  This
            exposes the hashcode for specific image versions to verify that the container
            version pulled is actually the version that was indexed by the registry.
          example:
          - checksum: 77af4d6b9913e693e8d0b4b294fa62ade6054e6b2f1ffb617ac955dd63fb0182
            type: sha256
          items:
            $ref: '#/components/schemas/Checksum'
        image_type:
          $ref: '#/components/schemas/ImageType'
      description: Describes one container image.
      example:
        image_name: '["quay.io/seqware/seqware_full/1.1","ubuntu:latest"]'
        size: 0
        checksum:
        - checksum: 77af4d6b9913e693e8d0b4b294fa62ade6054e6b2f1ffb617ac955dd63fb0182
          type: sha256
        updated: updated
        registry_host: '["registry.hub.docker.com"]'
        image_type: Docker
    ImageType:
      type: string
      description: Indicates what kind of container is this image is.
      enum:
      - Docker
      - Singularity
      - Conda
    DescriptorType:
      type: string
      description: The type of descriptor that represents this version of the tool
        (e.g. CWL, WDL, NFL, or GALAXY). Note that these files can also include associated
        Docker/container files  and test parameters that further describe a version
        of a tool.
      enum:
      - CWL
      - WDL
      - NFL
      - GALAXY
    FileWrapper:
      type: object
      properties:
        content:
          type: string
          description: The content of the file itself. One of url or content is required.
        checksum:
          type: array
          description: 'A production (immutable) tool version is required to have
            a hashcode. Not required otherwise, but might be useful to detect changes. '
          example:
          - checksum: ea2a5db69bd20a42976838790bc29294df3af02b
            type: sha1
          items:
            $ref: '#/components/schemas/Checksum'
        url:
          type: string
          description: Optional url to the underlying content, should include version
            information, and can include a git hash.  Note that this URL should resolve
            to the raw unwrapped content that would otherwise be available in content.
            One of url or content is required.
          example: '{"descriptorfile":{"url":"https://raw.githubusercontent.com/ICGC-TCGA-PanCancer/pcawg_delly_workflow/ea2a5db69bd20a42976838790bc29294df3af02b/delly_docker/Delly.cwl"},"containerfile":{"url":"https://raw.githubusercontent.com/ICGC-TCGA-PanCancer/pcawg_delly_workflow/c83478829802b4d36374870843821abe1b625a71/delly_docker/Dockerfile"}}'
      description: |
        A file provides content for one of
        - A tool descriptor is a metadata document that describes one or more tools.
        - A tool document that describes how to test with one or more sample test
        JSON.
        - A containerfile is a document that describes how to build a particular
        container image. Examples include Dockerfiles for creating Docker images
        and Singularity recipes for Singularity images
      example:
        checksum:
        - checksum: ea2a5db69bd20a42976838790bc29294df3af02b
          type: sha1
        content: content
        url: '{"descriptorfile":{"url":"https://raw.githubusercontent.com/ICGC-TCGA-PanCancer/pcawg_delly_workflow/ea2a5db69bd20a42976838790bc29294df3af02b/delly_docker/Delly.cwl"},"containerfile":{"url":"https://raw.githubusercontent.com/ICGC-TCGA-PanCancer/pcawg_delly_workflow/c83478829802b4d36374870843821abe1b625a71/delly_docker/Dockerfile"}}'
    Error:
      required:
      - code
      type: object
      properties:
        code:
          type: integer
          format: int32
          default: 500
        message:
          type: string
          default: Internal Server Error
    Service:
      required:
      - id
      - name
      - organization
      - type
      - version
      type: object
      properties:
        id:
          type: string
          description: Unique ID of this service. Reverse domain name notation is
            recommended, though not required. The identifier should attempt to be
            globally unique so it can be used in downstream aggregator services e.g.
            Service Registry.
          example: org.ga4gh.myservice
        name:
          type: string
          description: Name of this service. Should be human readable.
          example: My project
        type:
          $ref: '#/components/schemas/ServiceType'
        description:
          type: string
          description: Description of the service. Should be human readable and provide
            information about the service.
          example: This service provides...
        organization:
          $ref: '#/components/schemas/Service_organization'
        contactUrl:
          type: string
          description: URL of the contact for the provider of this service, e.g. a
            link to a contact form (RFC 3986 format), or an email (RFC 2368 format).
          format: uri
          example: mailto:support@example.com
        documentationUrl:
          type: string
          description: URL of the documentation of this service (RFC 3986 format).
            This should help someone learn how to use your service, including any
            specifics required to access data, e.g. authentication.
          format: uri
          example: https://docs.myservice.example.com
        createdAt:
          type: string
          description: Timestamp describing when the service was first deployed and
            available (RFC 3339 format)
          format: date-time
          example: 2019-06-04T12:58:19Z
        updatedAt:
          type: string
          description: Timestamp describing when the service was last updated (RFC
            3339 format)
          format: date-time
          example: 2019-06-04T12:58:19Z
        environment:
          type: string
          description: Environment the service is running in. Use this to distinguish
            between production, development and testing/staging deployments. Suggested
            values are prod, test, dev, staging. However this is advised and not enforced.
          example: test
        version:
          type: string
          description: Version of the service being described. Semantic versioning
            is recommended, but other identifiers, such as dates or commit hashes,
            are also allowed. The version should be changed whenever the service is
            updated.
          example: 1.0.0
      description: GA4GH service
      example:
        documentationUrl: https://docs.myservice.example.com
        createdAt: 2019-06-04T12:58:19Z
        environment: test
        organization:
          name: My organization
          url: https://example.com
        name: My project
        description: This service provides...
        contactUrl: mailto:support@example.com
        id: org.ga4gh.myservice
        type:
          artifact: beacon
          version: 1.0.0
          group: org.ga4gh
        version: 1.0.0
        updatedAt: 2019-06-04T12:58:19Z
    ServiceType:
      required:
      - artifact
      - group
      - version
      type: object
      properties:
        group:
          type: string
          description: Namespace in reverse domain name format. Use `org.ga4gh` for
            implementations compliant with official GA4GH specifications. For services
            with custom APIs not standardized by GA4GH, or implementations diverging
            from official GA4GH specifications, use a different namespace (e.g. your
            organization's reverse domain name).
          example: org.ga4gh
        artifact:
          type: string
          description: Name of the API or GA4GH specification implemented. Official
            GA4GH types should be assigned as part of standards approval process.
            Custom artifacts are supported.
          example: beacon
        version:
          type: string
          description: Version of the API or specification. GA4GH specifications use
            semantic versioning.
          example: 1.0.0
      description: Type of a GA4GH service
      example:
        artifact: beacon
        version: 1.0.0
        group: org.ga4gh
    Service_organization:
      required:
      - name
      - url
      type: object
      properties:
        name:
          type: string
          description: Name of the organization responsible for the service
          example: My organization
        url:
          type: string
          description: URL of the website of the organization (RFC 3986 format)
          format: uri
          example: https://example.com
      description: Organization providing the service
      example:
        name: My organization
        url: https://example.com
  parameters:
    limit:
      name: limit
      in: query
      description: Amount of records to return in a given page.
      required: false
      style: form
      explode: true
      schema:
        type: integer
        format: int32
        default: 1000
    offset:
      name: offset
      in: query
      description: Start index of paging. Pagination results can be based on numbers
        or other values chosen by the registry implementor (for example, SHA values).
        If this exceeds the current result set return an empty set.  If not specified
        in the request, this will start at the beginning of the results.
      required: false
      style: form
      explode: true
      schema:
        type: string
  securitySchemes:
    BEARER:
      type: apiKey
      name: Authorization
      in: header
      x-apikeyInfoFunc: biocontainers_flask.server.controllers.authorization_controller.check_BEARER

