---
swagger: "2.0"
info:
  description: "Proposed API for GA4GH (Global Alliance for Genomics & Health) tool\
    \ and BioContainers Initiative. A tool consists of a set of container images that are paired with\
    \ a set of documents. Examples of documents include CWL (Common Workflow Language)\
    \ or WDL (Workflow Description Language) or NFL (Nextflow) that describe how to\
    \ use those images and a set of specifications for those images (examples are\
    \ Dockerfiles or Singularity recipes) that describe how to reproduce those images\
    \ in the future. \
      We use the following terminology, a \"container image\" describes\
    \ a container as stored at rest on a filesystem, a \"tool\" describes one of the\
    \ triples as described above. In practice, examples of \"tools\" include CWL CommandLineTools,\
    \ CWL Workflows, WDL workflows, and Nextflow workflows that reference containers\
    \ in formats such as Docker or Singularity. "
  version: "2.0.0"
  title: "BioContainers Tool Discovery API"
basePath: "/api/ga4gh/v2/"
tags:
- name: "BioContainers"
  description: "A set of resources proposed as a common standard for tool repositories"
produces:
- "application/json"
- "text/plain"
paths:
  /tools/{id}:
    get:
      tags:
      - "BioContainers"
      summary: "List one specific tool, acts as an anchor for self references"
      description: "This endpoint returns one specific tool (which has ToolVersions\
        \ nested inside it)"
      operationId: "tools_id_get"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique identifier of the tool, scoped to this registry, for\
          \ example `123456`"
        required: true
        type: "string"
      responses:
        200:
          description: "A tool."
          schema:
            $ref: "#/definitions/Tool"
        404:
          description: "The tool can not be found."
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "biocontainers_flask.server.controllers.ga4_gh_controller"
  /tools/{id}/versions:
    get:
      tags:
      - "BioContainers"
      summary: "List versions of a tool"
      description: "Returns all versions of the specified tool"
      operationId: "tools_id_versions_get"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique identifier of the tool, scoped to this registry, for\
          \ example `123456`"
        required: true
        type: "string"
      responses:
        200:
          description: "An array of tool versions"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ToolVersion"
      x-swagger-router-controller: "biocontainers_flask.server.controllers.ga4_gh_controller"
  /tools/{id}/versions/{version_id}:
    get:
      tags:
      - "BioContainers"
      summary: "List one specific tool version, acts as an anchor for self references"
      description: "This endpoint returns one specific tool version"
      operationId: "tools_id_versions_version_id_get"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique identifier of the tool, scoped to this registry, for\
          \ example `123456`"
        required: true
        type: "string"
      - name: "version_id"
        in: "path"
        description: "An identifier of the tool version, scoped to this registry,\
          \ for example `v1`"
        required: true
        type: "string"
      responses:
        200:
          description: "A tool version."
          schema:
            $ref: "#/definitions/ToolVersion"
        404:
          description: "The tool can not be found."
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "biocontainers_flask.server.controllers.ga4_gh_controller"
  /tools:
    get:
      tags:
      - "BioContainers"
      summary: "List all tools"
      description: "This endpoint returns all tools available or a filtered subset\
        \ using metadata query parameters.\n"
      operationId: "tools_get"
      parameters:
      - name: "id"
        in: "query"
        description: "A unique identifier of the tool, scoped to this registry, for\
          \ example `123456`"
        required: false
        type: "string"
      - name: "alias"
        in: "query"
        description: "OPTIONAL for tool registries that support aliases.\nIf provided\
          \ will only return entries with the given alias."
        required: false
        type: "string"
      - name: "registry"
        in: "query"
        description: "The image registry that contains the image."
        required: false
        type: "string"
      - name: "organization"
        in: "query"
        description: "The organization in the registry that published the image."
        required: false
        type: "string"
      - name: "name"
        in: "query"
        description: "The name of the image."
        required: false
        type: "string"
      - name: "toolname"
        in: "query"
        description: "The name of the tool."
        required: false
        type: "string"
      - name: "description"
        in: "query"
        description: "The description of the tool."
        required: false
        type: "string"
      - name: "author"
        in: "query"
        description: "The author of the tool (TODO a thought occurs, are we assuming\
          \ that the author of the CWL and the image are the same?)."
        required: false
        type: "string"
      - name: "checker"
        in: "query"
        description: "Return only checker workflows"
        required: false
        type: "boolean"
      - name: "offset"
        in: "query"
        description: "Start index of paging. Pagination results can be based on numbers\
          \ or other values chosen by the registry implementor (for example, SHA values).\
          \ If this exceeds the current result set return an empty set.  If not specified\
          \ in the request, this will start at the beginning of the results."
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "Amount of records to return in a given page."
        required: false
        type: "integer"
        default: 1000
        format: "int32"
      - name: "all_fields_search"
        in: "query"
        description: "String to search all fields"
        required: false
        type: "string"
      - name: "sort_field"
        in: "query"
        description: "Field to sortby"
        required: false
        type: "string"
        default: "id"
      - name: "sort_order"
        in: "query"
        description: "sort order: asc or desc"
        required: false
        type: "string"
        default: "asc"
      responses:
        200:
          description: "An array of Tools that match the filter."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tool"
          headers:
            next_page:
              type: "string"
              description: "A URL that can be used to reach the next page based on\
                \ the current offset and page record limit"
            last_page:
              type: "string"
              description: "A URL that can be used to reach the last page based on\
                \ the current page record limit"
            self_link:
              type: "string"
              description: "A URL that can be used to return to the current page later"
            current_offset:
              type: "string"
              description: "The current start index of the paging used for this result"
            current_limit:
              type: "integer"
              description: "The current page record limit used for this result"
      x-swagger-router-controller: "biocontainers_flask.server.controllers.ga4_gh_controller"
  /tools/{id}/versions/{version_id}/{type}/descriptor:
    get:
      tags:
      - "BioContainers"
      summary: "Get the tool descriptor for the specified tool"
      description: "Returns the descriptor for the specified tool (examples include\
        \ CWL, WDL, or Nextflow documents)."
      operationId: "tools_id_versions_version_id_type_descriptor_get"
      parameters:
      - name: "type"
        in: "path"
        description: "The output type of the descriptor. If not specified, it is up\
          \ to the underlying implementation to determine which output type to return.\
          \ Plain types return the bare descriptor while the \"non-plain\" types return\
          \ a descriptor wrapped with metadata. Allowable values include \"CWL\",\
          \ \"WDL\", \"NFL\", \"PLAIN_CWL\", \"PLAIN_WDL\", \"PLAIN_NFL\"."
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "A unique identifier of the tool, scoped to this registry, for\
          \ example `123456`"
        required: true
        type: "string"
      - name: "version_id"
        in: "path"
        description: "An identifier of the tool version, scoped to this registry,\
          \ for example `v1`"
        required: true
        type: "string"
      responses:
        200:
          description: "The tool descriptor."
          schema:
            $ref: "#/definitions/FileWrapper"
        404:
          description: "The tool descriptor can not be found."
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "biocontainers_flask.server.controllers.ga4_gh_controller"
  /tools/{id}/versions/{version_id}/{type}/descriptor/{relative_path}:
    get:
      tags:
      - "BioContainers"
      summary: "Get additional tool descriptor files relative to the main file"
      description: "Descriptors can often include imports that refer to additional\
        \ descriptors. This returns additional descriptors for the specified tool\
        \ in the same or other directories that can be reached as a relative path.\
        \ This endpoint can be useful for workflow engine implementations like cwltool\
        \ to programmatically download all the descriptors for a tool and run it.\
        \ This can optionally include other files described with FileWrappers such\
        \ as test parameters and containerfiles. "
      operationId: "tools_id_versions_version_id_type_descriptor_relative_path_get"
      parameters:
      - name: "type"
        in: "path"
        description: "The output type of the descriptor. If not specified, it is up\
          \ to the underlying implementation to determine which output type to return.\
          \ Plain types return the bare descriptor while the \"non-plain\" types return\
          \ a descriptor wrapped with metadata. Allowable values are \"CWL\", \"WDL\"\
          , \"NFL\", \"PLAIN_CWL\", \"PLAIN_WDL\", \"PLAIN_NFL\"."
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "A unique identifier of the tool, scoped to this registry, for\
          \ example `123456`"
        required: true
        type: "string"
      - name: "version_id"
        in: "path"
        description: "An identifier of the tool version for this particular tool registry,\
          \ for example `v1`"
        required: true
        type: "string"
      - name: "relative_path"
        in: "path"
        description: "A relative path to the additional file (same directory or subdirectories),\
          \ for example 'foo.cwl' would return a 'foo.cwl' from the same directory\
          \ as the main descriptor. 'nestedDirectory/foo.cwl' would return the file\
          \  from a nested subdirectory.  Unencoded paths such 'sampleDirectory/foo.cwl'\
          \ should also be allowed"
        required: true
        type: "string"
        pattern: ".+"
        x-regex: ".+"
        x-modifiers: []
      responses:
        200:
          description: "The tool descriptor."
          schema:
            $ref: "#/definitions/FileWrapper"
        404:
          description: "The tool can not be output in the specified type."
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "biocontainers_flask.server.controllers.ga4_gh_controller"
  /tools/{id}/versions/{version_id}/{type}/tests:
    get:
      tags:
      - "BioContainers"
      summary: "Get a list of test JSONs"
      description: "Get a list of test JSONs (these allow you to execute the tool\
        \ successfully) suitable for use with this descriptor type."
      operationId: "tools_id_versions_version_id_type_tests_get"
      parameters:
      - name: "type"
        in: "path"
        description: "The type of the underlying descriptor. Allowable values include\
          \ \"CWL\", \"WDL\", \"NFL\", \"PLAIN_CWL\", \"PLAIN_WDL\", \"PLAIN_NFL\"\
          . For example, \"CWL\" would return an list of ToolTests objects while \"\
          PLAIN_CWL\" would return a bare JSON list with the content of the tests. "
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "A unique identifier of the tool, scoped to this registry, for\
          \ example `123456`"
        required: true
        type: "string"
      - name: "version_id"
        in: "path"
        description: "An identifier of the tool version for this particular tool registry,\
          \ for example `v1`"
        required: true
        type: "string"
      responses:
        200:
          description: "The tool test JSON response."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FileWrapper"
        404:
          description: "The tool can not be output in the specified type."
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "biocontainers_flask.server.controllers.ga4_gh_controller"
  /tools/{id}/versions/{version_id}/{type}/files:
    get:
      tags:
      - "BioContainers"
      summary: "Get a list of objects that contain the relative path and file type"
      description: "Get a list of objects that contain the relative path and file\
        \ type. The descriptors are intended for use with the /tools/{id}/versions/{version_id}/{type}/descriptor/{relative_path}\
        \ endpoint."
      operationId: "tools_id_versions_version_id_type_files_get"
      parameters:
      - name: "type"
        in: "path"
        description: "The output type of the descriptor. Examples of allowable values\
          \ are \"CWL\", \"WDL\", and \"NextFlow.\""
        required: true
        type: "string"
      - name: "id"
        in: "path"
        description: "A unique identifier of the tool, scoped to this registry, for\
          \ example `123456`"
        required: true
        type: "string"
      - name: "version_id"
        in: "path"
        description: "An identifier of the tool version for this particular tool registry,\
          \ for example `v1`"
        required: true
        type: "string"
      responses:
        200:
          description: "The array of File JSON responses."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ToolFile"
        404:
          description: "The tool can not be output in the specified type."
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "biocontainers_flask.server.controllers.ga4_gh_controller"
  /tools/{id}/versions/{version_id}/containerfile:
    get:
      tags:
      - "BioContainers"
      summary: "Get the container specification(s) for the specified image."
      description: "Returns the container specifications(s) for the specified image.\
        \ For example, a CWL CommandlineTool can be associated with one specification\
        \ for a container, a CWL Workflow can be associated with multiple specifications\
        \ for containers"
      operationId: "tools_id_versions_version_id_containerfile_get"
      parameters:
      - name: "id"
        in: "path"
        description: "A unique identifier of the tool, scoped to this registry, for\
          \ example `123456`"
        required: true
        type: "string"
      - name: "version_id"
        in: "path"
        description: "An identifier of the tool version for this particular tool registry,\
          \ for example `v1`"
        required: true
        type: "string"
      responses:
        200:
          description: "The tool payload."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FileWrapper"
        404:
          description: "There are no container specifications for this tool"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "biocontainers_flask.server.controllers.ga4_gh_controller"
  /metadata:
    get:
      tags:
      - "BioContainers"
      summary: "Return some metadata that is useful for describing this registry"
      description: "Return some metadata that is useful for describing this registry"
      operationId: "metadata_get"
      parameters: []
      responses:
        200:
          description: "A Metadata object describing this service."
          schema:
            $ref: "#/definitions/Metadata"
      x-swagger-router-controller: "biocontainers_flask.server.controllers.ga4_gh_controller"
  /toolClasses:
    get:
      tags:
      - "BioContainers"
      summary: "List all tool types"
      description: "This endpoint returns all tool-classes available\n"
      operationId: "tool_classes_get"
      parameters: []
      responses:
        200:
          description: "A list of potential tool classes."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ToolClass"
      x-swagger-router-controller: "biocontainers_flask.server.controllers.ga4_gh_controller"
  /stats:
    get:
      tags:
        - BioContainers
      summary: "Return some metadata that is useful for describing this registry"
      description: "Return some metadata that is useful for describing this registry"
      operationId: "stats"
      parameters: []
      responses:
        200:
          description: "A Metadata object describing this service."
          schema:
            type: "array"
            items:
                $ref: "#/definitions/Stat"
      x-swagger-router-controller: "biocontainers_flask.server.controllers.ga4_gh_controller"
  /workflows:
    get:
      tags:
        - "BioContainerWorkflows"
      summary: "List all BioContainer workflows"
      description: "This endpoint returns all BioContainer workflows\n"
      operationId: "wokflows_get"
      parameters:
      - name: "name"
        in: "query"
        description: "The name of the workflow"
        required: false
        type: "string"
      - name: "description"
        in: "query"
        description: "The description of the workflow"
        required: false
        type: "string"
      - name: "author"
        in: "query"
        description: "The author of the workflow"
        required: false
        type: "string"
      - name: "license"
        in: "query"
        description: "license of the workflow"
        required: false
        type: "string"
      - name: "type"
        in: "query"
        description: "type of the workflow"
        required: false
        type: "string"
      - name: "container"
        in: "query"
        description: "container used by the workflow"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Start index of pagination"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "Amount of records to return in a given page."
        required: false
        type: "integer"
        default: 1000
        format: "int32"
      - name: "all_fields_search"
        in: "query"
        description: "String to search all fields"
        required: false
        type: "string"
      - name: "sort_field"
        in: "query"
        description: "Field to sortby"
        required: false
        type: "string"
        default: "name"
      - name: "sort_order"
        in: "query"
        description: "sort order: asc or desc"
        required: false
        type: "string"
        default: "asc"
      responses:
        200:
          description: "A list of BioContainer workflows."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Workflow"
          headers:
            next_page:
              type: "string"
              description: "A URL that can be used to reach the next page based on\
                 \ the current offset and page record limit"
            last_page:
              type: "string"
              description: "A URL that can be used to reach the last page based on\
                 \ the current page record limit"
            self_link:
              type: "string"
              description: "A URL that can be used to return to the current page later"
            current_offset:
              type: "string"
              description: "The current start index of the paging used for this result"
            current_limit:
              type: "integer"
              description: "The current page record limit used for this result"
      x-swagger-router-controller: "biocontainers_flask.server.controllers.ga4_gh_controller"
    post:
      tags:
        - "BioContainerWorkflows"
      summary: "Adds a BioContainer workflow"
      description: "This endpoint adds a BioContainer workflow\n"
      operationId: "wokflow_post"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "workflow"
          description: "workflow object"
          required: true
          schema:
            $ref: "#/definitions/Workflow"
      responses:
        201:
          description: Created
      x-swagger-router-controller: "biocontainers_flask.server.controllers.ga4_gh_controller"
definitions:
  ToolFile:
    type: "object"
    properties:
      path:
        type: "string"
        description: "Relative path of the file.  A descriptor's path can be used\
          \ with the BioContainers .../{type}/descriptor/{relative_path} endpoint"
      file_type:
        type: "string"
        enum:
        - "TEST_FILE"
        - "PRIMARY_DESCRIPTOR"
        - "SECONDARY_DESCRIPTOR"
        - "CONTAINERFILE"
        - "OTHER"
    example:
      path: "path"
      file_type: "TEST_FILE"
  ToolClass:
    type: "object"
    properties:
      id:
        type: "string"
        description: "The unique identifier for the class"
      name:
        type: "string"
        description: "A short friendly name for the class"
      description:
        type: "string"
        description: "A longer explanation of what this class is and what it can accomplish"
    description: "Describes a class (type) of tool allowing us to categorize workflows,\
      \ tasks, and maybe even other entities (such as services) separately"
    example:
      name: "name"
      description: "description"
      id: "id"
  Tool:
    type: "object"
    required:
    - "author"
    - "id"
    - "organization"
    - "toolclass"
    - "url"
    - "versions"
    properties:
      url:
        type: "string"
        example: "http://agora.broadinstitute.org/tools/123456"
        description: "The URL for this tool in this registry"
      id:
        type: "string"
        example: "123456"
        description: "A unique identifier of the tool, scoped to this registry"
      aliases:
        type: "array"
        description: "OPTIONAL\nA list of strings that can be used to identify this\
          \ tool.\nThis can be used to expose alternative ids (such as GUIDs) for\
          \ a tool\nfor registries. Can be used to match tools across registries."
        items:
          type: "string"
          example: ""
      organization:
        type: "string"
        description: "The organization that published the image."
      toolname:
        type: "string"
        description: "The name of the tool."
      toolclass:
        $ref: "#/definitions/ToolClass"
      description:
        type: "string"
        description: "The description of the tool."
      author:
        type: "string"
        description: "Contact information for the author of this tool entry in the\
          \ registry. (More complex authorship information is handled by the descriptor)"
      meta_version:
        type: "string"
        description: "The version of this tool in the registry. Iterates when fields\
          \ like the description, author, etc. are updated."
      contains:
        type: "array"
        example: "https://bio.tools/tool/mytum.de/SNAP2/1"
        description: "An array of IDs for the applications that are stored inside\
          \ this tool"
        items:
          type: "string"
      has_checker:
        type: "boolean"
        description: "Whether this tool has a checker tool associated with it"
      checker_url:
        type: "string"
        description: "Optional url to the checker tool that will exit successfully\
          \ if this tool produced the expected result given test data."
      verified:
        type: "boolean"
        description: "Reports whether this tool has been verified by a specific organization\
          \ or individual"
      verified_source:
        type: "string"
        description: "Source of metadata that can support a verified tool, such as\
          \ an email or URL"
      signed:
        type: "boolean"
        description: "Reports whether this tool has been signed."
      versions:
        type: "array"
        description: "A list of versions for this tool"
        items:
          $ref: "#/definitions/ToolVersion"
    description: "A tool (or described tool) is defined as a tuple of a descriptor\
      \ file (which potentially consists of multiple files), a set of container images,\
      \ and a set of instructions for creating those images."
    example:
      aliases:
      - ""
      - ""
      author: "author"
      meta_version: "meta_version"
      checker_url: "checker_url"
      toolname: "toolname"
      verified: true
      toolclass:
        name: "name"
        description: "description"
        id: "id"
      description: "description"
      signed: true
      url: "http://agora.broadinstitute.org/tools/123456"
      contains: "https://bio.tools/tool/mytum.de/SNAP2/1"
      versions:
      - image: "quay.io/seqware/seqware_full/1.1"
        registry_url: "registry_url"
        image_name: "image_name"
        meta_version: "meta_version"
        name: "name"
        descriptor_type:
        - {}
        - {}
        containerfile: true
        verified: true
        id: "v1"
        url: "http://agora.broadinstitute.org/tools/123456/1"
        verified_source: "verified_source"
      - image: "quay.io/seqware/seqware_full/1.1"
        registry_url: "registry_url"
        image_name: "image_name"
        meta_version: "meta_version"
        name: "name"
        descriptor_type:
        - {}
        - {}
        containerfile: true
        verified: true
        id: "v1"
        url: "http://agora.broadinstitute.org/tools/123456/1"
        verified_source: "verified_source"
      organization: "organization"
      has_checker: true
      id: "123456"
      verified_source: "verified_source"
  ToolVersion:
    type: "object"
    required:
    - "id"
    - "url"
    properties:
      name:
        type: "string"
        description: "The name of the version."
      url:
        type: "string"
        example: "http://agora.broadinstitute.org/tools/123456/1"
        description: "The URL for this tool in this registry"
      id:
        type: "string"
        example: "v1"
        description: "An identifier of the version of this tool for this particular\
          \ tool registry"
      image:
        type: "string"
        example: "quay.io/seqware/seqware_full/1.1"
        description: "The docker path to the image (and version) for this tool"
      registry_url:
        type: "string"
        description: "A URL to a Singularity registry is provided when a specific\
          \ type of image does not use ids in the Docker format. Used along with image_name\
          \ to locate a specific image."
      image_name:
        type: "string"
        description: "Used in conjunction with a registry_url if provided to locate\
          \ images"
      descriptor_type:
        type: "array"
        description: "The type (or types) of descriptors available."
        items:
          $ref: "#/definitions/DescriptorType"
      containerfile:
        type: "boolean"
        description: "Reports if this tool has a containerfile available."
      meta_version:
        type: "string"
        description: "The version of this tool version in the registry. Iterates when\
          \ fields like the description, author, etc. are updated."
      verified:
        type: "boolean"
        description: "Reports whether this tool has been verified by a specific organization\
          \ or individual"
      verified_source:
        type: "string"
        description: "Source of metadata that can support a verified tool, such as\
          \ an email or URL"
    description: "A tool version describes a particular iteration of a tool as described\
      \ by a reference to a specific image and/or documents."
    example:
      image: "quay.io/seqware/seqware_full/1.1"
      registry_url: "registry_url"
      image_name: "image_name"
      meta_version: "meta_version"
      name: "name"
      descriptor_type:
      - {}
      - {}
      containerfile: true
      verified: true
      id: "v1"
      url: "http://agora.broadinstitute.org/tools/123456/1"
      verified_source: "verified_source"
  DescriptorType:
    type: "string"
    description: "The type of descriptor that represents this version of the tool\
      \ (e.g. CWL, WDL, or NFL). Note that these files can also include associated\
      \ Docker/container files  and test parameters that further describe a version\
      \ of a tool"
    enum:
    - "CWL"
    - "WDL"
    - "NFL"
  FileWrapper:
    type: "object"
    properties:
      content:
        type: "string"
        description: "The content of the file itself. One of url or content is required."
      url:
        type: "string"
        example: ""
        description: "Optional url to the underlying content, should include version\
          \ information, and can include a git hash.  Note that this URL should resolve\
          \ to the raw unwrapped content that would otherwise be available in content.\
          \ One of url or content is required."
    description: "A file provides content for one of\n- A tool descriptor is a metadata\
      \ document that describes one or more tools.\n- A tool document that describes\
      \ how to test with one or more sample test\nJSON.\n- A containerfile is a document\
      \ that describes how to build a particular\ncontainer image. Examples include\
      \ Dockerfiles for creating Docker images\nand Singularity recipes for Singularity\
      \ images\n"
    example:
      content: "content"
      url: ""
  Metadata:
    type: "object"
    required:
    - "api_version"
    - "version"
    properties:
      version:
        type: "string"
        description: "The version of this registry"
      api_version:
        type: "string"
        description: "The version of the BioContainers tool-registry API supported by this\
          \ registry"
      country:
        type: "string"
        description: "A country code for the registry (ISO 3166-1 alpha-3)"
      friendly_name:
        type: "string"
        description: "A friendly name that can be used in addition to the hostname\
          \ to describe a registry"
    description: "Describes this registry to better allow for mirroring and indexing."
    example:
      country: "country"
      friendly_name: "friendly_name"
      api_version: "api_version"
      version: "version"
  Stat:
    type: "object"
    required:
    - "name"
    - "value"
    properties:
      name:
        type: "string"
        description: "name of the stats"
      value:
        type: "string"
        description: "Value of the stats"
    description: "Provides a set of stats abotu the containers"
    example:
      name: "tool_counts"
      value: "20"
  Workflow:
    type: "object"
    required:
      - "name"
      - "git-repo"
    description: "A BioContainer workflow"
    properties:
      name:
        type: "string"
        description: "The name of workflow"
      type:
        type: "string"
        description: "The type of workflow"
      description:
        type: "string"
        description: "The description of workflow"
      git-repo:
        type: "string"
        description: "The git-repo of workflow"
      license:
        type: "string"
        description: "The license of workflow"
      author:
        type: "string"
        description: "The author of workflow"
      containers:
        type: "array"
        description: "The containers used by the workflow"
        items:
          type: string

  Error:
    type: "object"
    required:
    - "code"
    properties:
      code:
        type: "integer"
        format: "int32"
        default: 500
      message:
        type: "string"
        default: "Internal Server Error"
parameters:
  limit:
    name: "limit"
    in: "query"
    description: "Amount of records to return in a given page."
    required: false
    type: "integer"
    default: 1000
    format: "int32"
  offset:
    name: "offset"
    in: "query"
    description: "Start index of paging. Pagination results can be based on numbers\
      \ or other values chosen by the registry implementor (for example, SHA values).\
      \ If this exceeds the current result set return an empty set.  If not specified\
      \ in the request, this will start at the beginning of the results."
    required: false
    type: "string"
externalDocs:
  description: "Description of BioContainers Tool Registry (Exchange) Schema"
  url: "https://github.com/ga4gh/tool-registry-schemas"
